{"ast":null,"code":"var _jsxFileName = \"/home/thallescarneiro/Trybe/Exercises/trybe-exercises/M\\xF3dulo_2/Bloco_16/Dia_4/content-exercises/doguinhos-app/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchDogs } from './redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App({\n  isFetching,\n  imagePath,\n  getDogs\n}) {\n  return isFetching ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 18\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        display: 'block'\n      },\n      onClick: getDogs,\n      type: \"button\",\n      children: \"New Dog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: '100%'\n      },\n      src: src,\n      alt: \"dog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\n\nconst mapStateToProps = state => ({ // isFetching: state.isFetching,\n  // src: state.imagePath,\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getDogs: () => dispatch(fetchDogs())\n});\n\nApp.propTypes = {\n  isFetching: PropTypes.bool.isRequired,\n  src: PropTypes.string.isRequired,\n  getDogs: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/thallescarneiro/Trybe/Exercises/trybe-exercises/MÃ³dulo_2/Bloco_16/Dia_4/content-exercises/doguinhos-app/src/App.js"],"names":["React","PropTypes","connect","fetchDogs","App","isFetching","imagePath","getDogs","width","display","src","mapStateToProps","state","mapDispatchToProps","dispatch","propTypes","bool","isRequired","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAAb,EAAiD;AAC/C,SACEF,UAAU,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,gBAEN;AAAK,IAAA,KAAK,EAAG;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA,4BACE;AACE,MAAA,KAAK,EAAG;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADV;AAEE,MAAA,OAAO,EAAGF,OAFZ;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,KAAK,EAAG;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAiC,MAAA,GAAG,EAAGE,GAAvC;AAA6C,MAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHN;AAeD;;KAhBQN,G;;AAkBT,MAAMO,eAAe,GAAIC,KAAD,KAAY,EAClC;AACA;AACA,KAAGA;AAH+B,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,OAAO,EAAE,MAAMO,QAAQ,CAACX,SAAS,EAAV;AADiB,CAAf,CAA3B;;AAIAC,GAAG,CAACW,SAAJ,GAAgB;AACdV,EAAAA,UAAU,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADb;AAEdP,EAAAA,GAAG,EAAET,SAAS,CAACiB,MAAV,CAAiBD,UAFR;AAGdV,EAAAA,OAAO,EAAEN,SAAS,CAACkB,IAAV,CAAeF;AAHV,CAAhB;AAMA,eAAef,OAAO,CAACS,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchDogs } from './redux/actions';\n\nfunction App({ isFetching, imagePath, getDogs }) {\n  return (\n    isFetching ? <p>Loading...</p>\n      : (\n        <div style={ { width: 500 } }>\n          <button\n            style={ { display: 'block' } }\n            onClick={ getDogs }\n            type=\"button\"\n          >\n            New Dog\n          </button>\n          <img style={ { width: '100%' } } src={ src } alt=\"dog\" />\n        </div>\n      )\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  // isFetching: state.isFetching,\n  // src: state.imagePath,\n  ...state,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getDogs: () => dispatch(fetchDogs()),\n});\n\nApp.propTypes = {\n  isFetching: PropTypes.bool.isRequired,\n  src: PropTypes.string.isRequired,\n  getDogs: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}