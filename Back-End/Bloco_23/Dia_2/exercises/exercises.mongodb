// 01. Exercício 1: Inspecione um documento para que você se familiarize com a estrutura. Entenda os atributos e os níveis existentes.
use('class');
db.superheroes.findOne();

// 02. Exercício 2: Selecione todos os super-heróis com menos de 1.80m de altura. Lembre-se de que essa informação está em centímetros.
use('class');
db.superheroes.find({ 'aspects.height': { $lt: 180 } });

// 03. Exercício 3: Retorne o total de super-heróis menores que 1.80m.
use('class');
db.superheroes.count({ 'aspects.height': { $lt: 180 } });

// 04. Exercício 4: Retorne o total de super-heróis com até 1.80m.
use('class');
db.superheroes.count({ 'aspects.height': { $lte: 180 } });

// 05. Exercício 5: Selecione um super-herói com 2.00m ou mais de altura.
use('class');
db.superheroes.findOne({ 'aspects.height': { $gte: 200 } });

// 06. Exercício 6: Retorne o total de super-heróis com 2.00m ou mais.
use('class');
db.superheroes.count({ 'aspects.height': { $gte: 200 } });

// 07. Exercício 7: Selecione todos os super-heróis que têm olhos verdes.
use('class');
db.superheroes.find({ 'aspects.eyeColor': 'green' });

// 08. Exercício 8: Retorne o total de super-heróis com olhos azuis.
use('class');
db.superheroes.count({ 'aspects.eyeColor': 'blue' });

// 09. Exercício 9: Utilizando o operador $in , selecione todos os super-heróis com cabelos pretos ou carecas ( "No Hair" ).
use('class');
db.superheroes.find({ 'aspects.hairColor': { $in: ['black', 'No Hair'] } });

// 10. Exercício 10: Retorne o total de super-heróis com cabelos pretos ou carecas ( "No Hair" ).
use('class');
db.superheroes.count({ 'aspects.hairColor': { $in: ['black', 'No Hair'] } });

// 11. Exercício 11: Retorne o total de super-heróis que não tenham cabelos pretos ou não sejam carecas.
use('class');
db.superheroes.count({ 'aspects.hairColor': { $nin: ['black', 'No Hair'] } });

// 12. Exercício 12: Utilizando o operador $not , retorne o total de super-heróis que não tenham mais de 1.80m de altura.
use('class');
db.superheroes.count({ 'aspects.height': { $not: { $gt: 180 } }});

// 13. Exercício 13: Selecione todos os super-heróis que não sejam humanos nem sejam maiores do que 1.80m .
use('class');
db.superheroes.find({
  $nor: [
    { race: 'Human' },
    { 'aspects.height': { $gt: 180 } }
  ]
});

// 14. Exercício 14: Selecione todos os super-heróis com 1.80m ou 2.00m de altura e que sejam publicados pela Marvel Comics .
use('class');
db.superheroes.count({
  'aspects.height': { $in: [180, 200] },
  publisher: 'Marvel Comics'
});

// 15. Exercício 15: Selecione todos os super-heróis que pesem entre 80kg e 100kg , sejam Humanos ou Mutantes e não sejam publicados pela DC Comics .
use('class');
db.superheroes.find({
  'aspects.weight': { $gte: 80, $lte: 100 },
  race: { $in: ['Human', 'Mutant'] },
  publisher: { $ne: 'DC Comics' }
});

// 16. Exercício 16: Retorne o total de documentos que não contêm o campo race .
use('class');
db.superheroes.count({ race: { $exists: false } });

// 17. Exercício 17: Retorne o total de documentos que contêm o campo hairColor .
use('class');
db.superheroes.count({ 'aspects.hairColor': { $exists: true } });

// 18. Exercício 18: Remova apenas um documento publicado pela Sony Pictures .
use('class');
db.superheroes.deleteOne({ publisher: 'Sony Pictures' });

// 19. Exercício 19: Remova todos os documentos publicados pelo George Lucas .
use('class');
db.superheroes.deleteMany({ publisher: 'George Lucas' });
